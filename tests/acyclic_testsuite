#!/usr/bin/expect

set timeout 1
spawn ./build/acyclic

expect_before {
    timeout { exit 1 }
}

expect "acyclic started"
expect "$ "
send "\t"
expect ""
send "\r"

expect "$ "
send "\t\t"
expect "exit greet help rockie rocky same sametext test"
send "\r"

expect "$ "
send "r\t"
expect ""
send "\t"
expect "rockie rocky"
send "\r"
expect "command not found"

expect "$ "
send "h\t"
expect "elp "
send "g\t"
expect "reet "
send "\r"

expect "$ "
send "greet me\r"
expect "hello from me"

expect "$ "
send "help greet m\t"
send "e"
expect "help greet me"
send "\r"

expect "$ "
send "same\t\t"
expect "same sametext"
send "\r"
expect "no function assigned"

expect "$ "
send "test o\r"
expect "args: \\\[*test\\\] \\\[o\\\]"

expect "$ "
send "help 1 2 3 4\r"
expect "show greeting"
expect "$ "
send "help 1 2 3 4 5\r"
expect "max arg count reached"

expect "$ "
send "greet --fmt=\"%s %s\" \"Foo\" \"Bar\"\r"
expect "arg: greet"
expect "arg: --fmt=\"%s %s\""
expect "arg: \"Foo\""
expect "arg: \"Bar\""
expect "$ "


###########################
###########################
#### history testcases ####
###########################
###########################

#######
# case:
#   1. clear history
#   2. enter command, exec
#   3. scroll back
#   4. exec again
####################################################

## clear history
send "12345678901234567890123456789012345678901234567890\r"
expect "command not found"
expect "$ "

## push 1. cmd
send "greet me\r"
expect "hello from me"

## test scrolling
send \033\[A
expect "greet me"
send "\r"
expect "hello from me"
expect "$ "


#######
# case:
#   1. clear history
#   2. enter non-command, exec
#   3. enter non-command, exec
#   4. scroll up
#   5. scroll up
#   6. scroll down
####################################################

## clear history
send "12345678901234567890123456789012345678901234567890\r"
expect "command not found"
expect "$ "

## push 1. cmd
send "bar\r"
expect "command not found"
expect "$ "

## push 2. cmd
send "apple\r"
expect "command not found"
expect "$ "

## test scrolling
send \033\[A
expect "apple"
send \033\[A
expect "bar"
send \033\[B
expect "apple"
send "\r"
expect "$ "


#######
# case:
#   1. clear history
#   2. enter non-command, exec
#   3. enter non-command, exec
#   4. enter non-command, no exec
#   5. scroll up
#   6. scroll up
#   7. scroll down
#   8. scroll down
#   9. command must reappear, exec
####################################################

## clear history
send "12345678901234567890123456789012345678901234567890\r"
expect "command not found"
expect "$ "

## push 1. cmd
send "apple\r"
expect "command not found"
expect "$ "

## push 2. cmd
send "bar\r"
expect "command not found"
expect "$ "

## type 3. cmd
send "scrolltest"
send \033\[A
expect "bar"
send \033\[A
expect "apple"
send \033\[B
expect "bar"
send \033\[B
expect "scrolltest"
send "\r"
expect "$ "


#######
# case:
#   1. clear history
#   2. enter command, exec (greet)
#   3. enter non-command, exec
#   4. scroll up
#   5. scroll up
#   6. add parameter "me" to command "greet"
#   7. execute changed command
####################################################

## clear history
send "12345678901234567890123456789012345678901234567890\r"
expect "command not found"
expect "$ "

## push 1. cmd
send "greet\r"
expect "hello from me"
expect "$ "

## push 2. cmd
send "foobar\r"
expect "command not found"
expect "$ "

## type 3. cmd
send \033\[A
expect "foobar"
send \033\[A
expect "greet"
send " me\r"
expect "arg: me"
expect "$ "


exit 0
